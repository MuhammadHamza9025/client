{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huzaifa\\\\OneDrive\\\\Desktop\\\\Project POS\\\\client\\\\src\\\\components\\\\newOrder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './newOrder.css';\nimport Header from './header';\nimport axios from 'axios';\nimport apis from '../utils/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewOrder = () => {\n  _s();\n  const [currentDateTime] = useState(new Date().toLocaleString());\n  const [selectedPayment, setSelectedPayment] = useState('');\n  const [selectedDueTime, setSelectedDueTime] = useState('');\n  const [customDueTime, setCustomDueTime] = useState('');\n  const [designImages, setDesignImages] = useState([]);\n  const [customer, setCustomer] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    company: ''\n  });\n  const [items, setItems] = useState([{\n    id: '1',\n    barcode: '',\n    itemNumber: '',\n    color: '',\n    price: '',\n    cost: '',\n    quantity: '',\n    selectedColors: [],\n    selectedPlacements: []\n  }]);\n  // Use these helper functions to call your backend APIs\n\n  // 1. Create an item and return its id\n  const createItem = async itemData => {\n    const res = await axios.post(apis().newItem, itemData);\n    return res.data.item._id;\n  };\n\n  // 2. Create a design and return its id\n  const createDesign = async designData => {\n    const res = await axios.post(apis().newDesign, designData);\n    return res.data.design._id;\n  };\n\n  // 3. Create a customer and return its id\n  const createCustomer = async customerData => {\n    const res = await axios.post(apis().newCustomer, customerData);\n    return res.data.customer._id;\n  };\n\n  // 4. Create a payment and return its id\n  const createPayment = async paymentData => {\n    const res = await axios.post(apis().newOrderPayment, paymentData);\n    return res.data.payment._id;\n  };\n\n  // 5. (Optional) Upload images separately if needed; expect form-data and URL returns\n  const uploadImages = async formData => {\n    const res = await axios.post(apis().images, formData);\n    return res.data.uploadedPaths; // adjust per your API response\n  };\n\n  // 6. Create the final order using the collected IDs\n  const createFinalOrder = async orderData => {\n    const res = await axios.post(apis().newOrder, orderData);\n    return res.data.order._id;\n  };\n\n  // Modal state for color selection\n  const [showColorModal, setShowColorModal] = useState(false);\n  const [itemForColorModal, setItemForColorModal] = useState(null);\n\n  // Modal state for checkout\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\n  const openColorModal = itemId => {\n    setItemForColorModal(itemId);\n    setShowColorModal(true);\n  };\n  const closeColorModal = () => {\n    setShowColorModal(false);\n    setItemForColorModal(null);\n  };\n  const colorChart = [{\n    hex: '#000000',\n    name: 'Black'\n  }, {\n    hex: '#0B0B0B',\n    name: 'Very Dark Gray'\n  }];\n  const handlePlacementClick = (itemId, placement) => {\n    setItems(prevItems => prevItems.map(item => {\n      if (item.id === itemId) {\n        const newPlacements = item.selectedPlacements.includes(placement) ? item.selectedPlacements.filter(p => p !== placement) : [...item.selectedPlacements, placement];\n        return {\n          ...item,\n          selectedPlacements: newPlacements\n        };\n      }\n      return item;\n    }));\n  };\n  const handleColorSelect = (itemId, hex) => {\n    setItems(prevItems => prevItems.map(item => {\n      if (item.id === itemId) {\n        const newColors = item.selectedColors.includes(hex) ? item.selectedColors.filter(c => c !== hex) : [...item.selectedColors, hex];\n        return {\n          ...item,\n          selectedColors: newColors\n        };\n      }\n      return item;\n    }));\n  };\n  const handleItemChange = (itemId, field, value) => {\n    setItems(prevItems => prevItems.map(item => item.id === itemId ? {\n      ...item,\n      [field]: value\n    } : item));\n  };\n  const addItem = () => {\n    const newId = (parseInt(items[items.length - 1].id) + 1).toString();\n    setItems(prev => [...prev, {\n      id: newId,\n      barcode: '',\n      itemNumber: '',\n      color: '',\n      price: '',\n      cost: '',\n      quantity: '',\n      selectedColors: [],\n      selectedPlacements: []\n    }]);\n  };\n  const removeItem = itemId => {\n    if (items.length > 1) {\n      setItems(prev => prev.filter(item => item.id !== itemId));\n    }\n  };\n  const handleDesignImagesChange = e => {\n    const files = Array.from(e.target.files).map(file => ({\n      file,\n      preview: URL.createObjectURL(file)\n    }));\n    setDesignImages(prev => [...prev, ...files]);\n  };\n  const removeDesignImage = index => {\n    setDesignImages(prev => prev.filter((_, i) => i !== index));\n  };\n  const handleDueTimeSelect = time => {\n    setSelectedDueTime(time);\n    const now = new Date();\n    let dueDate = new Date(now);\n    switch (time) {\n      case '15min':\n        dueDate.setMinutes(now.getMinutes() + 15);\n        break;\n      case '20min':\n        dueDate.setMinutes(now.getMinutes() + 20);\n        break;\n      case '30min':\n        dueDate.setMinutes(now.getMinutes() + 30);\n        break;\n      case '1hour':\n        dueDate.setHours(now.getHours() + 1);\n        break;\n      default:\n        break;\n    }\n    setCustomDueTime(dueDate.toISOString().slice(0, 16));\n  };\n  useEffect(() => {\n    let buffer = '';\n    let lastKeyTime = Date.now();\n    const handleKeyPress = e => {\n      const currentTime = Date.now();\n      if (currentTime - lastKeyTime > 100) {\n        buffer = '';\n      }\n      if (e.key === 'Enter') {\n        if (buffer) {\n          handleItemChange(items[0].id, 'barcode', buffer);\n          buffer = '';\n        }\n      } else {\n        buffer += e.key;\n      }\n      lastKeyTime = currentTime;\n    };\n    window.addEventListener('keypress', handleKeyPress);\n    return () => window.removeEventListener('keypress', handleKeyPress);\n  }, [items]);\n  const fetchCustomerByPhone = async phone => {\n    const mockDB = {\n      '1234567890': {\n        name: 'John Doe',\n        email: 'john@example.com',\n        company: 'Acme Inc.'\n      },\n      '9876543210': {\n        name: 'Jane Smith',\n        email: 'jane@example.com',\n        company: 'Globex Corp.'\n      }\n    };\n    return mockDB[phone] || null;\n  };\n  const handlePhoneBlur = async e => {\n    const phone = e.target.value;\n    if (phone) {\n      const result = await fetchCustomerByPhone(phone);\n      if (result) {\n        setCustomer(prev => ({\n          ...prev,\n          phone,\n          ...result\n        }));\n      }\n    }\n  };\n  const handleCustomerChange = (field, value) => {\n    setCustomer(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Calculate total price (price × quantity for each item)\n  const calculateTotalPrice = () => {\n    return items.reduce((sum, item) => {\n      const price = parseFloat(item.price) || 0;\n      const quantity = parseFloat(item.quantity) || 1;\n      return sum + price * quantity;\n    }, 0);\n  };\n\n  // Instead of a checkout section on the main page,\n  // the form submission triggers the checkout popup\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowCheckoutModal(true);\n  };\n\n  // Modify your handlePlaceOrder function as follows:\n  const handlePlaceOrder = async () => {\n    try {\n      // 1. Create each item and collect IDs\n      const itemIds = await Promise.all(items.map(async item => {\n        return await createItem({\n          name: item.itemNumber,\n          color: item.color,\n          price: item.price,\n          cost: item.cost,\n          quantity: item.quantity\n          // Add 'picture' if available (e.g., if using uploadImages function)\n        });\n      }));\n\n      // 2. Create design — build your payload based on your design state; below is an example payload.\n      // You may need to include images URLs from a separate upload process.\n      const designId = await createDesign({\n        name: \"Summer Collection\",\n        // customize\n        pictures: [\n          // { pictureFiles: [\"http://example.com/pic1.jpg\", ...], colorChart: [{ item: \"T-shirt\", color: \"Blue\" }], placement: [{ position1: \"A1\", position2: \"H1\" }], size: \"FILL\" }\n        ],\n        text: [\n          // { font: \"Arial\", color: [{ item: \"Banner\", color: \"Red\" }], placement: [{ position1: \"A2\", position2: \"H2\" }], size: \"FILL\" }\n        ]\n      });\n\n      // 3. Create customer\n      const customerId = await createCustomer({\n        name: customer.name,\n        number: customer.phone,\n        email: customer.email,\n        company: customer.company\n      });\n\n      // 4. Create payment; note that you can adjust boolean flags as needed.\n      const paymentId = await createPayment({\n        method: selectedPayment.toUpperCase(),\n        amount: calculateTotalPrice(),\n        layaway: selectedPayment === 'layaway',\n        quote: selectedPayment === 'quote'\n      });\n\n      // 5. Finally create the order with collected IDs:\n      const orderPayload = {\n        items: itemIds,\n        // items ids array\n        design: designId,\n        // design id\n        customer: customerId,\n        // customer id\n        payments: [paymentId],\n        // array with payment id(s)\n        createdBy: \"60f4f4d5eb7a8a56acde1238\",\n        // or fetch from current user context\n        duedate: customDueTime // ensure proper date format (ISO string ideally)\n      };\n      await createFinalOrder(orderPayload);\n\n      // Close modal and inform the user\n      setShowCheckoutModal(false);\n      alert('Order placed successfully!');\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Error placing order');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-order-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"global-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-item-button\",\n            onClick: addItem,\n            children: \"Add New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Date/Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-input\",\n              value: currentDateTime,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-number\",\n              children: [\"Item #\", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), items.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"remove-button\",\n              onClick: () => removeItem(item.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"POS Scan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"scanner-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-input scanner-input\",\n                  value: item.barcode,\n                  onChange: e => handleItemChange(item.id, 'barcode', e.target.value),\n                  placeholder: \"Scan barcode or enter manually\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"scanner-icon\",\n                  viewBox: \"0 0 24 24\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: 2,\n                    d: \"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"New Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-input\",\n                  placeholder: \"Item Number\",\n                  value: item.itemNumber,\n                  onChange: e => handleItemChange(item.id, 'itemNumber', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  className: \"form-input\",\n                  placeholder: \"Color\",\n                  value: item.color,\n                  onChange: e => handleItemChange(item.id, 'color', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-input\",\n                  placeholder: \"Price\",\n                  value: item.price,\n                  onChange: e => handleItemChange(item.id, 'price', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-input\",\n                  placeholder: \"Cost\",\n                  value: item.cost,\n                  onChange: e => handleItemChange(item.id, 'cost', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"form-input\",\n                  placeholder: \"Quantity\",\n                  value: item.quantity,\n                  onChange: e => handleItemChange(item.id, 'quantity', e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"upload-area\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Upload 8x8 Design File\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 3\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"image/*\",\n                  multiple: true,\n                  capture: \"environment\",\n                  onChange: handleDesignImagesChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 3\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"design-images-preview\",\n                children: designImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: img.preview,\n                    alt: `Design Preview ${index}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => removeDesignImage(index),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 7\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 5\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"Design\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"upload-area\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Upload 8x8 Design File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                multiple: true,\n                capture: \"environment\",\n                onChange: handleDesignImagesChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"design-images-preview\",\n              children: designImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: img.preview,\n                  alt: `Design Preview ${index}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeDesignImage(index),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 7\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 5\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Color Selection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"open-color-modal-button\",\n                onClick: () => openColorModal(item.id),\n                children: \"Select Colors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), item.selectedColors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"selected-colors\",\n                children: item.selectedColors.map(color => {\n                  var _colorChart$find;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"selected-color-pill\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"selected-color-swatch\",\n                      style: {\n                        backgroundColor: color\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 27\n                    }, this), (_colorChart$find = colorChart.find(c => c.hex === color)) === null || _colorChart$find === void 0 ? void 0 : _colorChart$find.name]\n                  }, color, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label\",\n                children: \"Placement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"placement-grid\",\n                children: [[...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `placement-cell ${item.selectedPlacements.includes(`A${i + 1}`) ? 'selected' : ''}`,\n                  onClick: () => handlePlacementClick(item.id, `A${i + 1}`),\n                  children: [\"A\", i + 1]\n                }, `A${i + 1}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this)), [...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `placement-cell ${item.selectedPlacements.includes(`H${i + 1}`) ? 'selected' : ''}`,\n                  onClick: () => handlePlacementClick(item.id, `H${i + 1}`),\n                  children: [\"H\", i + 1]\n                }, `H${i + 1}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"section-title\",\n                children: \"Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"Font\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Arial\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Times New Roman\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Helvetica\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Due\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '15min' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('15min'),\n              children: \"15 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '20min' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('20min'),\n              children: \"20 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '30min' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('30min'),\n              children: \"30 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '1hour' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('1hour'),\n              children: \"1 hour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              className: \"form-input\",\n              value: customDueTime,\n              onChange: e => {\n                setCustomDueTime(e.target.value);\n                setSelectedDueTime('custom');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Customer Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-input\",\n              placeholder: \"Name\",\n              value: customer.name,\n              onChange: e => handleCustomerChange('name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              className: \"form-input\",\n              placeholder: \"Phone Number\",\n              value: customer.phone,\n              onChange: e => handleCustomerChange('phone', e.target.value),\n              onBlur: handlePhoneBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-input\",\n              placeholder: \"Email Address\",\n              value: customer.email,\n              onChange: e => handleCustomerChange('email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-input\",\n              placeholder: \"Company\",\n              value: customer.company,\n              onChange: e => handleCustomerChange('company', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'cash' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('cash'),\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'card' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('card'),\n              children: \"Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'check' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('check'),\n              children: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'layaway' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('layaway'),\n              children: \"Layaway (50%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'quote' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('quote'),\n              children: \"Quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Review Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), showColorModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close-button\",\n          onClick: closeColorModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-chart\",\n          children: colorChart.map(color => {\n            var _items$find;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `color-swatch ${(_items$find = items.find(i => i.id === itemForColorModal)) !== null && _items$find !== void 0 && _items$find.selectedColors.includes(color.hex) ? 'selected' : ''}`,\n              style: {\n                backgroundColor: color.hex\n              },\n              onClick: () => handleColorSelect(itemForColorModal, color.hex),\n              title: color.name\n            }, color.hex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 9\n    }, this), showCheckoutModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"checkout-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkout-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close-button\",\n          onClick: () => setShowCheckoutModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkout-items\",\n          children: items.map(item => {\n            const price = parseFloat(item.price) || 0;\n            const quantity = parseFloat(item.quantity) || 1;\n            const amount = (price * quantity).toFixed(2);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"checkout-item\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [item.itemNumber || `Item ${item.id}`, \": $\", amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 21\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"total-price\",\n          children: [\"Total Price: $\", calculateTotalPrice().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"place-order-button\",\n          onClick: handlePlaceOrder,\n          children: \"Place Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NewOrder, \"9kDvgWjdxqK3EQZTM4UalCpzjvA=\");\n_c = NewOrder;\nexport default NewOrder;\nvar _c;\n$RefreshReg$(_c, \"NewOrder\");","map":{"version":3,"names":["React","useState","useEffect","Header","axios","apis","jsxDEV","_jsxDEV","Fragment","_Fragment","NewOrder","_s","currentDateTime","Date","toLocaleString","selectedPayment","setSelectedPayment","selectedDueTime","setSelectedDueTime","customDueTime","setCustomDueTime","designImages","setDesignImages","customer","setCustomer","name","phone","email","company","items","setItems","id","barcode","itemNumber","color","price","cost","quantity","selectedColors","selectedPlacements","createItem","itemData","res","post","newItem","data","item","_id","createDesign","designData","newDesign","design","createCustomer","customerData","newCustomer","createPayment","paymentData","newOrderPayment","payment","uploadImages","formData","images","uploadedPaths","createFinalOrder","orderData","newOrder","order","showColorModal","setShowColorModal","itemForColorModal","setItemForColorModal","showCheckoutModal","setShowCheckoutModal","openColorModal","itemId","closeColorModal","colorChart","hex","handlePlacementClick","placement","prevItems","map","newPlacements","includes","filter","p","handleColorSelect","newColors","c","handleItemChange","field","value","addItem","newId","parseInt","length","toString","prev","removeItem","handleDesignImagesChange","e","files","Array","from","target","file","preview","URL","createObjectURL","removeDesignImage","index","_","i","handleDueTimeSelect","time","now","dueDate","setMinutes","getMinutes","setHours","getHours","toISOString","slice","buffer","lastKeyTime","handleKeyPress","currentTime","key","window","addEventListener","removeEventListener","fetchCustomerByPhone","mockDB","handlePhoneBlur","result","handleCustomerChange","calculateTotalPrice","reduce","sum","parseFloat","handleSubmit","preventDefault","handlePlaceOrder","itemIds","Promise","all","designId","pictures","text","customerId","number","paymentId","method","toUpperCase","amount","layaway","quote","orderPayload","payments","createdBy","duedate","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onClick","readOnly","onChange","placeholder","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","accept","multiple","capture","img","src","alt","_colorChart$find","style","backgroundColor","find","onBlur","_items$find","title","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Huzaifa/OneDrive/Desktop/Project POS/client/src/components/newOrder.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './newOrder.css';\r\nimport Header from './header';\r\nimport axios from 'axios';\r\nimport apis from '../utils/api';\r\nconst NewOrder = () => {\r\n  const [currentDateTime] = useState(new Date().toLocaleString());\r\n  const [selectedPayment, setSelectedPayment] = useState('');\r\n  const [selectedDueTime, setSelectedDueTime] = useState('');\r\n  const [customDueTime, setCustomDueTime] = useState('');\r\n  const [designImages, setDesignImages] = useState([]);\r\n  const [customer, setCustomer] = useState({\r\n    name: '',\r\n    phone: '',\r\n    email: '',\r\n    company: ''\r\n  });\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: '1',\r\n      barcode: '',\r\n      itemNumber: '',\r\n      color: '',\r\n      price: '',\r\n      cost: '',\r\n      quantity: '',\r\n      selectedColors: [],\r\n      selectedPlacements: []\r\n    }\r\n  ]);\r\n// Use these helper functions to call your backend APIs\r\n\r\n// 1. Create an item and return its id\r\nconst createItem = async (itemData) => {\r\n  const res = await axios.post(apis().newItem, itemData);\r\n  return res.data.item._id;\r\n};\r\n\r\n// 2. Create a design and return its id\r\nconst createDesign = async (designData) => {\r\n  const res = await axios.post(apis().newDesign, designData);\r\n  return res.data.design._id;\r\n};\r\n\r\n// 3. Create a customer and return its id\r\nconst createCustomer = async (customerData) => {\r\n  const res = await axios.post(apis().newCustomer, customerData);\r\n  return res.data.customer._id;\r\n};\r\n\r\n// 4. Create a payment and return its id\r\nconst createPayment = async (paymentData) => {\r\n  const res = await axios.post(apis().newOrderPayment, paymentData);\r\n  return res.data.payment._id;\r\n};\r\n\r\n// 5. (Optional) Upload images separately if needed; expect form-data and URL returns\r\nconst uploadImages = async (formData) => {\r\n  const res = await axios.post(apis().images, formData);\r\n  return res.data.uploadedPaths; // adjust per your API response\r\n};\r\n\r\n// 6. Create the final order using the collected IDs\r\nconst createFinalOrder = async (orderData) => {\r\n  const res = await axios.post(apis().newOrder, orderData);\r\n  return res.data.order._id;\r\n};\r\n\r\n  // Modal state for color selection\r\n  const [showColorModal, setShowColorModal] = useState(false);\r\n  const [itemForColorModal, setItemForColorModal] = useState(null);\r\n\r\n  // Modal state for checkout\r\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\r\n\r\n  const openColorModal = (itemId) => {\r\n    setItemForColorModal(itemId);\r\n    setShowColorModal(true);\r\n  };\r\n\r\n  const closeColorModal = () => {\r\n    setShowColorModal(false);\r\n    setItemForColorModal(null);\r\n  };\r\n\r\n  const colorChart = [\r\n    { hex: '#000000', name: 'Black' },\r\n    { hex: '#0B0B0B', name: 'Very Dark Gray' }\r\n  ];\r\n\r\n  const handlePlacementClick = (itemId, placement) => {\r\n    setItems(prevItems =>\r\n      prevItems.map(item => {\r\n        if (item.id === itemId) {\r\n          const newPlacements = item.selectedPlacements.includes(placement)\r\n            ? item.selectedPlacements.filter(p => p !== placement)\r\n            : [...item.selectedPlacements, placement];\r\n          return { ...item, selectedPlacements: newPlacements };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleColorSelect = (itemId, hex) => {\r\n    setItems(prevItems =>\r\n      prevItems.map(item => {\r\n        if (item.id === itemId) {\r\n          const newColors = item.selectedColors.includes(hex)\r\n            ? item.selectedColors.filter(c => c !== hex)\r\n            : [...item.selectedColors, hex];\r\n          return { ...item, selectedColors: newColors };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleItemChange = (itemId, field, value) => {\r\n    setItems(prevItems =>\r\n      prevItems.map(item =>\r\n        item.id === itemId ? { ...item, [field]: value } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  const addItem = () => {\r\n    const newId = (parseInt(items[items.length - 1].id) + 1).toString();\r\n    setItems(prev => [\r\n      ...prev,\r\n      {\r\n        id: newId,\r\n        barcode: '',\r\n        itemNumber: '',\r\n        color: '',\r\n        price: '',\r\n        cost: '',\r\n        quantity: '',\r\n        selectedColors: [],\r\n        selectedPlacements: []\r\n      }\r\n    ]);\r\n  };\r\n\r\n  const removeItem = (itemId) => {\r\n    if (items.length > 1) {\r\n      setItems(prev => prev.filter(item => item.id !== itemId));\r\n    }\r\n  };\r\n\r\n  const handleDesignImagesChange = (e) => {\r\n    const files = Array.from(e.target.files).map((file) => ({\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n    }));\r\n    setDesignImages((prev) => [...prev, ...files]);\r\n  };\r\n\r\n  const removeDesignImage = (index) => {\r\n    setDesignImages((prev) => prev.filter((_, i) => i !== index));\r\n  };\r\n  const handleDueTimeSelect = (time) => {\r\n    setSelectedDueTime(time);\r\n    const now = new Date();\r\n    let dueDate = new Date(now);\r\n    switch (time) {\r\n      case '15min':\r\n        dueDate.setMinutes(now.getMinutes() + 15);\r\n        break;\r\n      case '20min':\r\n        dueDate.setMinutes(now.getMinutes() + 20);\r\n        break;\r\n      case '30min':\r\n        dueDate.setMinutes(now.getMinutes() + 30);\r\n        break;\r\n      case '1hour':\r\n        dueDate.setHours(now.getHours() + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setCustomDueTime(dueDate.toISOString().slice(0, 16));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let buffer = '';\r\n    let lastKeyTime = Date.now();\r\n\r\n    const handleKeyPress = (e) => {\r\n      const currentTime = Date.now();\r\n      if (currentTime - lastKeyTime > 100) {\r\n        buffer = '';\r\n      }\r\n      if (e.key === 'Enter') {\r\n        if (buffer) {\r\n          handleItemChange(items[0].id, 'barcode', buffer);\r\n          buffer = '';\r\n        }\r\n      } else {\r\n        buffer += e.key;\r\n      }\r\n      lastKeyTime = currentTime;\r\n    };\r\n\r\n    window.addEventListener('keypress', handleKeyPress);\r\n    return () => window.removeEventListener('keypress', handleKeyPress);\r\n  }, [items]);\r\n\r\n  const fetchCustomerByPhone = async (phone) => {\r\n    const mockDB = {\r\n      '1234567890': { name: 'John Doe', email: 'john@example.com', company: 'Acme Inc.' },\r\n      '9876543210': { name: 'Jane Smith', email: 'jane@example.com', company: 'Globex Corp.' }\r\n    };\r\n    return mockDB[phone] || null;\r\n  };\r\n\r\n  const handlePhoneBlur = async (e) => {\r\n    const phone = e.target.value;\r\n    if (phone) {\r\n      const result = await fetchCustomerByPhone(phone);\r\n      if (result) {\r\n        setCustomer(prev => ({ ...prev, phone, ...result }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCustomerChange = (field, value) => {\r\n    setCustomer(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  // Calculate total price (price × quantity for each item)\r\n  const calculateTotalPrice = () => {\r\n    return items.reduce((sum, item) => {\r\n      const price = parseFloat(item.price) || 0;\r\n      const quantity = parseFloat(item.quantity) || 1;\r\n      return sum + price * quantity;\r\n    }, 0);\r\n  };\r\n\r\n  // Instead of a checkout section on the main page,\r\n  // the form submission triggers the checkout popup\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowCheckoutModal(true);\r\n  };\r\n\r\n  // Modify your handlePlaceOrder function as follows:\r\nconst handlePlaceOrder = async () => {\r\n  try {\r\n    // 1. Create each item and collect IDs\r\n    const itemIds = await Promise.all(\r\n      items.map(async (item) => {\r\n        return await createItem({\r\n          name: item.itemNumber,\r\n          color: item.color,\r\n          price: item.price,\r\n          cost: item.cost,\r\n          quantity: item.quantity,\r\n          // Add 'picture' if available (e.g., if using uploadImages function)\r\n        });\r\n      })\r\n    );\r\n\r\n    // 2. Create design — build your payload based on your design state; below is an example payload.\r\n    // You may need to include images URLs from a separate upload process.\r\n    const designId = await createDesign({\r\n      name: \"Summer Collection\",    // customize\r\n      pictures: [\r\n        // { pictureFiles: [\"http://example.com/pic1.jpg\", ...], colorChart: [{ item: \"T-shirt\", color: \"Blue\" }], placement: [{ position1: \"A1\", position2: \"H1\" }], size: \"FILL\" }\r\n      ],\r\n      text: [\r\n        // { font: \"Arial\", color: [{ item: \"Banner\", color: \"Red\" }], placement: [{ position1: \"A2\", position2: \"H2\" }], size: \"FILL\" }\r\n      ]\r\n    });\r\n\r\n    // 3. Create customer\r\n    const customerId = await createCustomer({\r\n      name: customer.name,\r\n      number: customer.phone,\r\n      email: customer.email,\r\n      company: customer.company\r\n    });\r\n\r\n    // 4. Create payment; note that you can adjust boolean flags as needed.\r\n    const paymentId = await createPayment({\r\n      method: selectedPayment.toUpperCase(),\r\n      amount: calculateTotalPrice(),\r\n      layaway: selectedPayment === 'layaway',\r\n      quote: selectedPayment === 'quote'\r\n    });\r\n\r\n    // 5. Finally create the order with collected IDs:\r\n    const orderPayload = {\r\n      items: itemIds,              // items ids array\r\n      design: designId,            // design id\r\n      customer: customerId,        // customer id\r\n      payments: [paymentId],       // array with payment id(s)\r\n      createdBy: \"60f4f4d5eb7a8a56acde1238\", // or fetch from current user context\r\n      duedate: customDueTime       // ensure proper date format (ISO string ideally)\r\n    };\r\n\r\n    await createFinalOrder(orderPayload);\r\n\r\n    // Close modal and inform the user\r\n    setShowCheckoutModal(false);\r\n    alert('Order placed successfully!');\r\n  } catch (error) {\r\n    console.error('Error placing order:', error);\r\n    alert('Error placing order');\r\n  }\r\n};\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"new-order-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"global-controls\">\r\n            <button type=\"button\" className=\"add-item-button\" onClick={addItem}>\r\n              Add New Item\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Date/Time</h2>\r\n            <div className=\"form-group\">\r\n              <input type=\"text\" className=\"form-input\" value={currentDateTime} readOnly />\r\n            </div>\r\n          </div>\r\n\r\n          {items.map((item, index) => (\r\n            <div key={item.id}>\r\n              <div className=\"section\">\r\n                <div className=\"item-number\">Item #{index + 1}</div>\r\n                {items.length > 1 && (\r\n                  <button type=\"button\" className=\"remove-button\" onClick={() => removeItem(item.id)}>\r\n                    Remove\r\n                  </button>\r\n                )}\r\n                <h2 className=\"section-title\">Item</h2>\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">POS Scan</label>\r\n                  <div className=\"scanner-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input scanner-input\"\r\n                      value={item.barcode}\r\n                      onChange={(e) => handleItemChange(item.id, 'barcode', e.target.value)}\r\n                      placeholder=\"Scan barcode or enter manually\"\r\n                    />\r\n                    <svg className=\"scanner-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <h3 className=\"section-title\">New Item</h3>\r\n                  <div className=\"grid-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Item Number\"\r\n                      value={item.itemNumber}\r\n                      onChange={(e) => handleItemChange(item.id, 'itemNumber', e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Color\"\r\n                      value={item.color}\r\n                      onChange={(e) => handleItemChange(item.id, 'color', e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Price\"\r\n                      value={item.price}\r\n                      onChange={(e) => handleItemChange(item.id, 'price', e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Cost\"\r\n                      value={item.cost}\r\n                      onChange={(e) => handleItemChange(item.id, 'cost', e.target.value)}\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Quantity\"\r\n                      value={item.quantity}\r\n                      onChange={(e) => handleItemChange(item.id, 'quantity', e.target.value)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"upload-area\">\r\n  <p>Upload 8x8 Design File</p>\r\n  <input \r\n    type=\"file\" \r\n    accept=\"image/*\" \r\n    multiple \r\n    capture=\"environment\" \r\n    onChange={handleDesignImagesChange} \r\n  />\r\n</div>\r\n<div className=\"design-images-preview\">\r\n  {designImages.map((img, index) => (\r\n    <div key={index} className=\"preview-item\">\r\n      <img src={img.preview} alt={`Design Preview ${index}`} />\r\n      <button type=\"button\" onClick={() => removeDesignImage(index)}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  ))}\r\n</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"section\">\r\n                <h2 className=\"section-title\">Design</h2>\r\n                <div className=\"upload-area\">\r\n  <p>Upload 8x8 Design File</p>\r\n  <input \r\n    type=\"file\" \r\n    accept=\"image/*\" \r\n    multiple \r\n    capture=\"environment\" \r\n    onChange={handleDesignImagesChange} \r\n  />\r\n</div>\r\n<div className=\"design-images-preview\">\r\n  {designImages.map((img, index) => (\r\n    <div key={index} className=\"preview-item\">\r\n      <img src={img.preview} alt={`Design Preview ${index}`} />\r\n      <button type=\"button\" onClick={() => removeDesignImage(index)}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  ))}\r\n</div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Color Selection</label>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"open-color-modal-button\"\r\n                    onClick={() => openColorModal(item.id)}\r\n                  >\r\n                    Select Colors\r\n                  </button>\r\n                  {item.selectedColors.length > 0 && (\r\n                    <div className=\"selected-colors\">\r\n                      {item.selectedColors.map(color => (\r\n                        <div key={color} className=\"selected-color-pill\">\r\n                          <div\r\n                            className=\"selected-color-swatch\"\r\n                            style={{ backgroundColor: color }}\r\n                          />\r\n                          {colorChart.find(c => c.hex === color)?.name}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">Placement</label>\r\n                  <div className=\"placement-grid\">\r\n                    {[...Array(9)].map((_, i) => (\r\n                      <div\r\n                        key={`A${i + 1}`}\r\n                        className={`placement-cell ${item.selectedPlacements.includes(`A${i + 1}`) ? 'selected' : ''}`}\r\n                        onClick={() => handlePlacementClick(item.id, `A${i + 1}`)}\r\n                      >\r\n                        A{i + 1}\r\n                      </div>\r\n                    ))}\r\n                    {[...Array(9)].map((_, i) => (\r\n                      <div\r\n                        key={`H${i + 1}`}\r\n                        className={`placement-cell ${item.selectedPlacements.includes(`H${i + 1}`) ? 'selected' : ''}`}\r\n                        onClick={() => handlePlacementClick(item.id, `H${i + 1}`)}\r\n                      >\r\n                        H{i + 1}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n                <div className=\"section\">\r\n            <h2 className=\"section-title\">Text</h2>\r\n            <div className=\"form-group\">\r\n              <label className=\"form-label\">Font</label>\r\n              <select className=\"form-select\">\r\n                <option>Arial</option>\r\n                <option>Times New Roman</option>\r\n                <option>Helvetica</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n\r\n          \r\n\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Due</h2>\r\n            <div className=\"time-buttons\">\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${selectedDueTime === '15min' ? 'selected' : ''}`}\r\n                onClick={() => handleDueTimeSelect('15min')}\r\n              >\r\n                15 min\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${selectedDueTime === '20min' ? 'selected' : ''}`}\r\n                onClick={() => handleDueTimeSelect('20min')}\r\n              >\r\n                20 min\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${selectedDueTime === '30min' ? 'selected' : ''}`}\r\n                onClick={() => handleDueTimeSelect('30min')}\r\n              >\r\n                30 min\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${selectedDueTime === '1hour' ? 'selected' : ''}`}\r\n                onClick={() => handleDueTimeSelect('1hour')}\r\n              >\r\n                1 hour\r\n              </button>\r\n              <input\r\n                type=\"datetime-local\"\r\n                className=\"form-input\"\r\n                value={customDueTime}\r\n                onChange={(e) => {\r\n                  setCustomDueTime(e.target.value);\r\n                  setSelectedDueTime('custom');\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Customer Information</h2>\r\n            <div className=\"grid-container\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                placeholder=\"Name\"\r\n                value={customer.name}\r\n                onChange={(e) => handleCustomerChange('name', e.target.value)}\r\n              />\r\n              <input\r\n                type=\"tel\"\r\n                className=\"form-input\"\r\n                placeholder=\"Phone Number\"\r\n                value={customer.phone}\r\n                onChange={(e) => handleCustomerChange('phone', e.target.value)}\r\n                onBlur={handlePhoneBlur}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-input\"\r\n                placeholder=\"Email Address\"\r\n                value={customer.email}\r\n                onChange={(e) => handleCustomerChange('email', e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                placeholder=\"Company\"\r\n                value={customer.company}\r\n                onChange={(e) => handleCustomerChange('company', e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Payment</h2>\r\n            <div className=\"payment-options\">\r\n              <div\r\n                className={`payment-option ${selectedPayment === 'cash' ? 'selected' : ''}`}\r\n                onClick={() => setSelectedPayment('cash')}\r\n              >\r\n                Cash\r\n              </div>\r\n              <div\r\n                className={`payment-option ${selectedPayment === 'card' ? 'selected' : ''}`}\r\n                onClick={() => setSelectedPayment('card')}\r\n              >\r\n                Card\r\n              </div>\r\n              <div\r\n                className={`payment-option ${selectedPayment === 'check' ? 'selected' : ''}`}\r\n                onClick={() => setSelectedPayment('check')}\r\n              >\r\n                Check\r\n              </div>\r\n              <div\r\n                className={`payment-option ${selectedPayment === 'layaway' ? 'selected' : ''}`}\r\n                onClick={() => setSelectedPayment('layaway')}\r\n              >\r\n                Layaway (50%)\r\n              </div>\r\n              <div\r\n                className={`payment-option ${selectedPayment === 'quote' ? 'selected' : ''}`}\r\n                onClick={() => setSelectedPayment('quote')}\r\n              >\r\n                Quote\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Instead of an in-form checkout section, the form submission triggers the checkout popup */}\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Review Order\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Color Modal */}\r\n      {showColorModal && (\r\n        <div className=\"color-modal\">\r\n          <div className=\"color-modal-content\">\r\n            <button type=\"button\" className=\"close-button\" onClick={closeColorModal}>\r\n              X\r\n            </button>\r\n            <div className=\"color-chart\">\r\n              {colorChart.map(color => (\r\n                <div\r\n                  key={color.hex}\r\n                  className={`color-swatch ${\r\n                    items.find(i => i.id === itemForColorModal)?.selectedColors.includes(color.hex)\r\n                      ? 'selected'\r\n                      : ''\r\n                  }`}\r\n                  style={{ backgroundColor: color.hex }}\r\n                  onClick={() => handleColorSelect(itemForColorModal, color.hex)}\r\n                  title={color.name}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Checkout Modal Popup */}\r\n      {showCheckoutModal && (\r\n        <div className=\"checkout-modal\">\r\n          <div className=\"checkout-modal-content\">\r\n            <button type=\"button\" className=\"close-button\" onClick={() => setShowCheckoutModal(false)}>\r\n              X\r\n            </button>\r\n            <h2>Checkout</h2>\r\n            <div className=\"checkout-items\">\r\n              {items.map(item => {\r\n                const price = parseFloat(item.price) || 0;\r\n                const quantity = parseFloat(item.quantity) || 1;\r\n                const amount = (price * quantity).toFixed(2);\r\n                return (\r\n                  <div key={item.id} className=\"checkout-item\">\r\n                    <p>\r\n                      {item.itemNumber || `Item ${item.id}`}: ${amount}\r\n                    </p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <p className=\"total-price\">Total Price: ${calculateTotalPrice().toFixed(2)}</p>\r\n            <button type=\"button\" className=\"place-order-button\" onClick={handlePlaceOrder}>\r\n              Place Order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewOrder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}