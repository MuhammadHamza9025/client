{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huzaifa\\\\OneDrive\\\\Desktop\\\\Project POS\\\\client\\\\src\\\\components\\\\newOrder.jsx\",\n  _s = $RefreshSig$();\n//// filepath: /C:/Users/Huzaifa/OneDrive/Desktop/Project POS/client/src/components/newOrder.jsx\nimport React, { useState, useEffect } from 'react';\nimport './newOrder.css';\nimport Header from './header';\nimport axios from 'axios';\nimport apis from '../utils/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewOrder = () => {\n  _s();\n  const [designItemName, setDesignItemName] = useState(\"\");\n  const [currentDateTime] = useState(new Date().toLocaleString());\n  const [selectedPayment, setSelectedPayment] = useState('');\n  const [took, settook] = useState('');\n  const [selectedDueTime, setSelectedDueTime] = useState('');\n  const [customDueTime, setCustomDueTime] = useState('');\n  const [designImages, setDesignImages] = useState([]);\n  const [itemImages, setItemImages] = useState([]);\n\n  // New Design Section State\n  const [designColors, setDesignColors] = useState([]);\n  const [designPlacements, setDesignPlacements] = useState([]);\n  const [designSize, setDesignSize] = useState('Fill');\n\n  // New Text Section State\n  const [textFont, setTextFont] = useState('Arial');\n  const [textColors, setTextColors] = useState([]);\n  const [textPlacements, setTextPlacements] = useState([]);\n  const [textSize, setTextSize] = useState('FILL');\n\n  // Modals for design and text color selection\n  const [showDesignColorModal, setShowDesignColorModal] = useState(false);\n  const [showTextColorModal, setShowTextColorModal] = useState(false);\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\n\n  // Handle item images\n  const handleItemImagesChange = (itemId, e) => {\n    const files = Array.from(e.target.files).map(file => ({\n      file,\n      preview: URL.createObjectURL(file)\n    }));\n    setItems(prev => prev.map(item => item.id === itemId ? {\n      ...item,\n      images: [...item.images, ...files]\n    } : item));\n  };\n  const removeItemImage = (itemId, index) => {\n    setItems(prev => prev.map(item => item.id === itemId ? {\n      ...item,\n      images: item.images.filter((_, i) => i !== index)\n    } : item));\n  };\n\n  // Customer Info\n  const [customer, setCustomer] = useState({\n    name: '',\n    number: '',\n    email: '',\n    company: ''\n  });\n  const addDesign = () => {\n    const newId = (designs.length + 1).toString();\n    setDesigns(prev => [...prev, {\n      id: newId,\n      designItemName: '',\n      designImages: [],\n      designColors: [],\n      designPlacements: [],\n      designSize: 'Fill',\n      textFont: 'Arial',\n      textColors: [],\n      textPlacements: [],\n      textSize: 'FILL'\n    }]);\n  };\n  // Helper to combine placements\n  const combinePlacements = placements => {\n    const aPositions = placements.filter(p => p.startsWith(\"A\")).sort();\n    const hPositions = placements.filter(p => p.startsWith(\"H\")).sort();\n    const length = Math.max(aPositions.length, hPositions.length);\n    const combined = [];\n    for (let i = 0; i < length; i++) {\n      combined.push({\n        position1: aPositions[i] || '',\n        position2: hPositions[i] || ''\n      });\n    }\n    return combined;\n  };\n\n  // Items\n  const [items, setItems] = useState([{\n    id: '1',\n    barcode: '',\n    itemNumber: '',\n    color: '',\n    price: '',\n    cost: '',\n    quantity: '',\n    images: [],\n    // separate images for each item\n    selectedColors: [],\n    selectedPlacements: []\n  }]);\n  const [designs, setDesigns] = useState([{\n    id: '1',\n    designItemName: '',\n    designImages: [],\n    designColors: [],\n    designPlacements: [],\n    designSize: 'Fill',\n    textFont: 'Arial',\n    textColors: [],\n    textPlacements: [],\n    textSize: 'FILL'\n  }]);\n\n  // --- Backend helper functions (modified to handle arrays) ---\n  const createItems = async itemsData => {\n    // Adjust your backend to accept an array of items\n    const res = await axios.post(apis().newItem, {\n      items: itemsData\n    });\n    return res.data.itemIds; // Return array of item IDs\n  };\n  const createDesigns = async designsData => {\n    // Adjust your backend to accept an array of designs\n    const res = await axios.post(apis().newDesign, {\n      designs: designsData\n    });\n    return res.data.designIds; // Return array of design IDs\n  };\n  const createCustomer = async customerData => {\n    const res = await axios.post(apis().newCustomer, customerData);\n    return res.data.customer._id;\n  };\n  const createPayment = async paymentData => {\n    const res = await axios.post(apis().newOrderPayment, paymentData);\n    return res.data.payment._id;\n  };\n  const uploadImages = async formData => {\n    try {\n      const res = await axios.post(apis().images, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return res.data.images || [];\n    } catch (error) {\n      console.error('Upload failed:', error);\n      return [];\n    }\n  };\n  const createFinalOrder = async orderData => {\n    const res = await axios.post(apis().newOrder, orderData);\n    return res.data.order._id;\n  };\n\n  // Color modal for items\n  const [showColorModal, setShowColorModal] = useState(false);\n  const [itemForColorModal, setItemForColorModal] = useState(null);\n  const openColorModal = itemId => {\n    setItemForColorModal(itemId);\n    setShowColorModal(true);\n  };\n  const closeColorModal = () => {\n    setShowColorModal(false);\n    setItemForColorModal(null);\n  };\n  const colorChart = [{\n    hex: '#000000',\n    name: 'Black'\n  }, {\n    hex: '#0B0B0B',\n    name: 'Very Dark Gray'\n  }];\n\n  // Placement & color selection for items\n  const handlePlacementClick = (itemId, placement) => {\n    setItems(prevItems => prevItems.map(item => {\n      if (item.id === itemId) {\n        const newPlacements = item.selectedPlacements.includes(placement) ? item.selectedPlacements.filter(p => p !== placement) : [...item.selectedPlacements, placement];\n        return {\n          ...item,\n          selectedPlacements: newPlacements\n        };\n      }\n      return item;\n    }));\n  };\n  const handleColorSelect = (itemId, hex) => {\n    setItems(prevItems => prevItems.map(item => {\n      if (item.id === itemId) {\n        const newColors = item.selectedColors.includes(hex) ? item.selectedColors.filter(c => c !== hex) : [...item.selectedColors, hex];\n        return {\n          ...item,\n          selectedColors: newColors\n        };\n      }\n      return item;\n    }));\n  };\n\n  // Item fields\n  const handleItemChange = (itemId, field, value) => {\n    setItems(prevItems => prevItems.map(item => item.id === itemId ? {\n      ...item,\n      [field]: value\n    } : item));\n  };\n  const addItem = () => {\n    const newId = (parseInt(items[items.length - 1].id) + 1).toString();\n    setItems(prev => [...prev, {\n      id: newId,\n      barcode: '',\n      itemNumber: '',\n      color: '',\n      price: '',\n      cost: '',\n      quantity: '',\n      selectedColors: [],\n      selectedPlacements: []\n    }]);\n  };\n  const removeItem = itemId => {\n    if (items.length > 1) {\n      setItems(prev => prev.filter(item => item.id !== itemId));\n    }\n  };\n\n  // Design images\n  const handleDesignImagesChange = (designId, e) => {\n    const files = Array.from(e.target.files).map(file => ({\n      file,\n      preview: URL.createObjectURL(file)\n    }));\n    setDesigns(prev => prev.map(ds => ds.id === designId ? {\n      ...ds,\n      designImages: [...ds.designImages, ...files]\n    } : ds));\n  };\n  const removeDesignImage = (designId, index) => {\n    setDesigns(prev => prev.map(ds => ds.id === designId ? {\n      ...ds,\n      designImages: ds.designImages.filter((_, i) => i !== index)\n    } : ds));\n  };\n  const removeDesign = designId => {\n    if (designs.length > 1) {\n      setDesigns(prev => prev.filter(ds => ds.id !== designId));\n    }\n  };\n  const renderAllDesigns = () => designs.map((ds, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: [\"Design #\", idx + 1, designs.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"remove-button\",\n        onClick: () => removeDesign(ds.id),\n        children: \"Remove Design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload Design Image(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        capture: \"environment\",\n        onChange: e => handleDesignImagesChange(ds.id, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"design-images-preview\",\n      children: ds.designImages.map((img, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.preview,\n          alt: `Design Preview ${i}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => removeDesignImage(ds.id, i),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Design Item Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        placeholder: \"Enter item name\",\n        value: ds.designItemName,\n        onChange: e => setDesigns(prev => prev.map(d => d.id === ds.id ? {\n          ...d,\n          designItemName: e.target.value\n        } : d))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Design Color Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"open-color-modal-button\",\n        onClick: () => setShowDesignColorModal(true) // open as needed\n        ,\n        children: \"Select Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, ds.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 7\n  }, this));\n  // Set due time\n  const handleDueTimeSelect = time => {\n    setSelectedDueTime(time);\n    const now = new Date();\n    let dueDate = new Date(now);\n    switch (time) {\n      case '15min':\n        dueDate.setMinutes(now.getMinutes() + 15);\n        break;\n      case '20min':\n        dueDate.setMinutes(now.getMinutes() + 20);\n        break;\n      case '30min':\n        dueDate.setMinutes(now.getMinutes() + 30);\n        break;\n      case '1hour':\n        dueDate.setHours(now.getHours() + 1);\n        break;\n      default:\n        break;\n    }\n    setCustomDueTime(dueDate.toISOString().slice(0, 16));\n  };\n  const handleCustomDueTimeChange = e => {\n    setCustomDueTime(e.target.value);\n    setSelectedDueTime('custom');\n  };\n\n  // Barcode scanning setup\n  useEffect(() => {\n    let buffer = '';\n    let lastKeyTime = Date.now();\n    const handleKeyPress = e => {\n      const currentTime = Date.now();\n      if (currentTime - lastKeyTime > 100) {\n        buffer = '';\n      }\n      if (e.key === 'Enter') {\n        if (buffer) {\n          handleItemChange(items[0].id, 'barcode', buffer);\n          buffer = '';\n        }\n      } else {\n        buffer += e.key;\n      }\n      lastKeyTime = currentTime;\n    };\n    window.addEventListener('keypress', handleKeyPress);\n    return () => window.removeEventListener('keypress', handleKeyPress);\n  }, [items]);\n\n  // Simulate fetching customer\n  const fetchCustomerByPhone = async number => {\n    const mockDB = {\n      '1234567890': {\n        name: 'John Doe',\n        email: 'john@example.com',\n        company: 'Acme Inc.'\n      },\n      '9876543210': {\n        name: 'Jane Smith',\n        email: 'jane@example.com',\n        company: 'Globex Corp.'\n      }\n    };\n    return mockDB[number] || null;\n  };\n\n  // Prefill customer on phone blur\n  const handlePhoneBlur = async e => {\n    const number = e.target.value;\n    if (number) {\n      const result = await fetchCustomerByPhone(number);\n      if (result) {\n        setCustomer(prev => ({\n          ...prev,\n          number,\n          ...result\n        }));\n      }\n    }\n  };\n  const handleCustomerChange = (field, value) => {\n    setCustomer(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Calculations\n  const calculateTotalPrice = () => {\n    return items.reduce((sum, item) => {\n      const price = parseFloat(item.price) || 0;\n      const quantity = parseFloat(item.quantity) || 1;\n      return sum + price * quantity;\n    }, 0);\n  };\n\n  // Form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    setShowCheckoutModal(true);\n  };\n\n  // --- Modified Order Submission with multiple items & multiple designs ---\n  const handlePlaceOrder = async () => {\n    try {\n      // 1 - Upload all item images if any\n      let itemImageUrls = [];\n      if (itemImages.length > 0) {\n        const formData = new FormData();\n        itemImages.forEach(fileObj => formData.append('images', fileObj.file));\n        itemImageUrls = await uploadImages(formData);\n      }\n\n      // 2 - Prepare multiple item payloads\n      const itemPayloads = items.map(item => ({\n        name: item.itemNumber,\n        color: item.color,\n        price: item.price,\n        cost: item.cost,\n        quantity: item.quantity,\n        picture: itemImageUrls[0] || ''\n      }));\n      const itemIds = await createItems(itemPayloads);\n\n      // 3 - Upload all design images if any\n      let designImageUrls = [];\n      if (designImages.length > 0) {\n        const formDataDesign = new FormData();\n        designImages.forEach(fileObj => formDataDesign.append('images', fileObj.file));\n        designImageUrls = await uploadImages(formDataDesign);\n      }\n\n      // 4 - Prepare multiple design payloads (here just one, but can be extended)\n      const designsPayload = [{\n        pictures: [{\n          pictureFiles: designImageUrls,\n          colorChart: designColors.map(hex => {\n            var _colorChart$find;\n            return {\n              item: designItemName,\n              color: ((_colorChart$find = colorChart.find(c => c.hex === hex)) === null || _colorChart$find === void 0 ? void 0 : _colorChart$find.name) || hex\n            };\n          }),\n          placement: combinePlacements(designPlacements),\n          size: designSize\n        }],\n        text: [{\n          font: textFont,\n          color: textColors.map(hex => {\n            var _colorChart$find2;\n            return {\n              item: 'Banner',\n              // or update as needed\n              color: ((_colorChart$find2 = colorChart.find(c => c.hex === hex)) === null || _colorChart$find2 === void 0 ? void 0 : _colorChart$find2.name) || hex\n            };\n          }),\n          placement: combinePlacements(textPlacements),\n          size: textSize\n        }]\n      }];\n      const designIds = await createDesigns(designsPayload);\n\n      // 5 - Create or fetch customer\n      const customerId = await createCustomer({\n        name: customer.name,\n        number: customer.number,\n        email: customer.email,\n        company: customer.company\n      });\n\n      // 6 - Create payment\n      const paymentId = await createPayment({\n        method: selectedPayment.toUpperCase(),\n        amount: calculateTotalPrice(),\n        layaway: took === 'layaway',\n        quote: took === 'quote'\n      });\n\n      // 7 - Create final order\n      const authData = JSON.parse(localStorage.getItem('authData')) || {};\n      const orderPayload = {\n        items: itemIds,\n        design: designIds,\n        // now an array of design IDs\n        duedate: customDueTime,\n        customer: customerId,\n        payments: [paymentId],\n        createdBy: (authData === null || authData === void 0 ? void 0 : authData.username) || (authData === null || authData === void 0 ? void 0 : authData._id) || '000000000000000000000000'\n      };\n      await createFinalOrder(orderPayload);\n      setShowCheckoutModal(false);\n      toast.success('Order placed successfully');\n    } catch (error) {\n      console.error('Error placing order:', error);\n      alert('Error placing order');\n    }\n  };\n\n  // Render the new Design & Text Section\n  const renderDesignSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"section-title\",\n      children: \"Design\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload Design Image(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        capture: \"environment\",\n        onChange: handleDesignImagesChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"design-images-preview\",\n      children: designImages.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.preview,\n          alt: `Design Preview ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => removeDesignImage(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Design Item Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          placeholder: \"Enter item name\",\n          value: designItemName,\n          onChange: e => setDesignItemName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Design Color Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"open-color-modal-button\",\n        onClick: () => setShowDesignColorModal(true),\n        children: \"Select Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-colors\",\n        children: designColors.map(color => {\n          var _colorChart$find3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-color-pill\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"color-swatch\",\n              style: {\n                backgroundColor: color\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 15\n            }, this), (_colorChart$find3 = colorChart.find(c => c.hex === color)) === null || _colorChart$find3 === void 0 ? void 0 : _colorChart$find3.name]\n          }, color, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Design Placement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placement-grid\",\n        children: [...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `placement-cell ${designPlacements.includes(`A${i + 1}`) ? 'selected' : ''}`,\n          onClick: () => setDesignPlacements(prev => prev.includes(`A${i + 1}`) ? prev.filter(p => p !== `A${i + 1}`) : [...prev, `A${i + 1}`]),\n          children: [\"A\", i + 1]\n        }, `A${i + 1}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placement-grid\",\n        children: [...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `placement-cell ${designPlacements.includes(`H${i + 1}`) ? 'selected' : ''}`,\n          onClick: () => setDesignPlacements(prev => prev.includes(`H${i + 1}`) ? prev.filter(p => p !== `H${i + 1}`) : [...prev, `H${i + 1}`]),\n          children: [\"H\", i + 1]\n        }, `H${i + 1}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Design Size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        value: designSize,\n        onChange: e => setDesignSize(e.target.value),\n        placeholder: \"Enter size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: \"Text Properties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Font\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-select\",\n          value: textFont,\n          onChange: e => setTextFont(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Arial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Times New Roman\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Helvetica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Text Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"open-color-modal-button\",\n          onClick: () => setShowTextColorModal(true),\n          children: \"Select Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-colors\",\n          children: textColors.map(color => {\n            var _colorChart$find4;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selected-color-pill\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"color-swatch\",\n                style: {\n                  backgroundColor: color\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 17\n              }, this), (_colorChart$find4 = colorChart.find(c => c.hex === color)) === null || _colorChart$find4 === void 0 ? void 0 : _colorChart$find4.name]\n            }, color, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Text Placement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placement-grid\",\n          children: [...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `placement-cell ${textPlacements.includes(`A${i + 1}`) ? 'selected' : ''}`,\n            onClick: () => setTextPlacements(prev => prev.includes(`A${i + 1}`) ? prev.filter(p => p !== `A${i + 1}`) : [...prev, `A${i + 1}`]),\n            children: [\"A\", i + 1]\n          }, `A${i + 1}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"placement-grid\",\n          children: [...Array(9)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `placement-cell ${textPlacements.includes(`H${i + 1}`) ? 'selected' : ''}`,\n            onClick: () => setTextPlacements(prev => prev.includes(`H${i + 1}`) ? prev.filter(p => p !== `H${i + 1}`) : [...prev, `H${i + 1}`]),\n            children: [\"H\", i + 1]\n          }, `H${i + 1}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Text Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-input\",\n          value: textSize,\n          onChange: e => setTextSize(e.target.value),\n          placeholder: \"Enter size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 535,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-order-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"global-controls\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"add-item-button\",\n            onClick: addItem,\n            children: \"Add New Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Date/Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-input\",\n              value: currentDateTime,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this), items.map((item, index) => {\n          var _item$images;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-number\",\n                children: [\"Item #\", index + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 753,\n                columnNumber: 17\n              }, this), items.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"remove-button\",\n                onClick: () => removeItem(item.id),\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"section-title\",\n                children: \"Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 763,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: \"POS Scan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"scanner-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-input scanner-input\",\n                    value: item.barcode,\n                    onChange: e => handleItemChange(item.id, 'barcode', e.target.value),\n                    placeholder: \"Scan barcode or enter manually\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                    className: \"scanner-icon\",\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      strokeLinecap: \"round\",\n                      strokeLinejoin: \"round\",\n                      strokeWidth: 2,\n                      d: \"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"section-title\",\n                  children: \"New Item\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 792,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-input\",\n                    placeholder: \"Item Number\",\n                    value: item.itemNumber,\n                    onChange: e => handleItemChange(item.id, 'itemNumber', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-input\",\n                    placeholder: \"Color\",\n                    value: item.color,\n                    onChange: e => handleItemChange(item.id, 'color', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 803,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-input\",\n                    placeholder: \"Price\",\n                    value: item.price,\n                    onChange: e => handleItemChange(item.id, 'price', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-input\",\n                    placeholder: \"Cost\",\n                    value: item.cost,\n                    onChange: e => handleItemChange(item.id, 'cost', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 821,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"form-input\",\n                    placeholder: \"Quantity\",\n                    value: item.quantity,\n                    onChange: e => handleItemChange(item.id, 'quantity', e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 793,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"upload-area\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Upload Item Image(s)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    accept: \"image/*\",\n                    multiple: true,\n                    capture: \"environment\",\n                    onChange: e => handleItemImagesChange(item.id, e)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"design-images-preview\",\n                  children: (_item$images = item.images) === null || _item$images === void 0 ? void 0 : _item$images.map((img, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"preview-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: img.preview,\n                      alt: `Item Image Preview ${idx}`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 853,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: () => removeItemImage(item.id, idx),\n                      children: \"Remove\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 25\n                    }, this)]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 850,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this);\n        }), renderAllDesigns(), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"add-item-button\",\n          onClick: addDesign,\n          children: \"Add New Design\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Due\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '15min' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('15min'),\n              children: \"15 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '20min' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('20min'),\n              children: \"20 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === '30min' ? 'selected' : ''}`,\n              onClick: () => handleDueTimeSelect('30min'),\n              children: \"30 min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-button ${selectedDueTime === 'custom' ? 'selected' : ''}`,\n              onClick: () => setSelectedDueTime('custom'),\n              children: \"Custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              className: \"form-input\",\n              value: customDueTime,\n              onChange: handleCustomDueTimeChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Customer Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-input\",\n              placeholder: \"Name\",\n              value: customer.name,\n              onChange: e => handleCustomerChange('name', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              className: \"form-input\",\n              placeholder: \"Phone Number\",\n              value: customer.number,\n              onChange: e => handleCustomerChange('number', e.target.value),\n              onBlur: handlePhoneBlur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              className: \"form-input\",\n              placeholder: \"Email Address\",\n              value: customer.email,\n              onChange: e => handleCustomerChange('email', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 937,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-input\",\n              placeholder: \"Company\",\n              value: customer.company,\n              onChange: e => handleCustomerChange('company', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Payment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'cash' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('cash'),\n              children: \"Cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'card' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('card'),\n              children: \"Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${selectedPayment === 'check' ? 'selected' : ''}`,\n              onClick: () => setSelectedPayment('check'),\n              children: \"Check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${took === 'layaway' ? 'selected' : ''}`,\n              onClick: () => settook('layaway'),\n              children: \"Layaway (50%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `payment-option ${took === 'quote' ? 'selected' : ''}`,\n              onClick: () => settook('quote'),\n              children: \"Quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Review Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 7\n    }, this), showColorModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Item Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-grid\",\n          children: colorChart.map(({\n            hex,\n            name\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-swatch\",\n            style: {\n              backgroundColor: hex\n            },\n            onClick: () => handleColorSelect(itemForColorModal, hex),\n            children: name\n          }, hex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeColorModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1020,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1006,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1005,\n      columnNumber: 9\n    }, this), showDesignColorModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Design Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-grid\",\n          children: colorChart.map(({\n            hex,\n            name\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-swatch\",\n            style: {\n              backgroundColor: hex\n            },\n            onClick: () => setDesignColors(prev => prev.includes(hex) ? prev.filter(c => c !== hex) : [...prev, hex]),\n            children: name\n          }, hex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowDesignColorModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1028,\n      columnNumber: 9\n    }, this), showTextColorModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Text Colors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1062,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-grid\",\n          children: colorChart.map(({\n            hex,\n            name\n          }) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color-swatch\",\n            style: {\n              backgroundColor: hex\n            },\n            onClick: () => setTextColors(prev => prev.includes(hex) ? prev.filter(c => c !== hex) : [...prev, hex]),\n            children: name\n          }, hex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1063,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowTextColorModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1060,\n      columnNumber: 9\n    }, this), showCheckoutModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-backdrop\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Review Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Price: $\", calculateTotalPrice().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkout-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePlaceOrder,\n            children: \"Place Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1097,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowCheckoutModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1092,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(NewOrder, \"Nz09KDTDub+3E2OeEvtwzi89EYA=\");\n_c = NewOrder;\nexport default NewOrder;\nvar _c;\n$RefreshReg$(_c, \"NewOrder\");","map":{"version":3,"names":["React","useState","useEffect","Header","axios","apis","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","NewOrder","_s","designItemName","setDesignItemName","currentDateTime","Date","toLocaleString","selectedPayment","setSelectedPayment","took","settook","selectedDueTime","setSelectedDueTime","customDueTime","setCustomDueTime","designImages","setDesignImages","itemImages","setItemImages","designColors","setDesignColors","designPlacements","setDesignPlacements","designSize","setDesignSize","textFont","setTextFont","textColors","setTextColors","textPlacements","setTextPlacements","textSize","setTextSize","showDesignColorModal","setShowDesignColorModal","showTextColorModal","setShowTextColorModal","showCheckoutModal","setShowCheckoutModal","handleItemImagesChange","itemId","e","files","Array","from","target","map","file","preview","URL","createObjectURL","setItems","prev","item","id","images","removeItemImage","index","filter","_","i","customer","setCustomer","name","number","email","company","addDesign","newId","designs","length","toString","setDesigns","combinePlacements","placements","aPositions","p","startsWith","sort","hPositions","Math","max","combined","push","position1","position2","items","barcode","itemNumber","color","price","cost","quantity","selectedColors","selectedPlacements","createItems","itemsData","res","post","newItem","data","itemIds","createDesigns","designsData","newDesign","designIds","createCustomer","customerData","newCustomer","_id","createPayment","paymentData","newOrderPayment","payment","uploadImages","formData","headers","error","console","createFinalOrder","orderData","newOrder","order","showColorModal","setShowColorModal","itemForColorModal","setItemForColorModal","openColorModal","closeColorModal","colorChart","hex","handlePlacementClick","placement","prevItems","newPlacements","includes","handleColorSelect","newColors","c","handleItemChange","field","value","addItem","parseInt","removeItem","handleDesignImagesChange","designId","ds","removeDesignImage","removeDesign","renderAllDesigns","idx","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","accept","multiple","capture","onChange","img","src","alt","placeholder","d","handleDueTimeSelect","time","now","dueDate","setMinutes","getMinutes","setHours","getHours","toISOString","slice","handleCustomDueTimeChange","buffer","lastKeyTime","handleKeyPress","currentTime","key","window","addEventListener","removeEventListener","fetchCustomerByPhone","mockDB","handlePhoneBlur","result","handleCustomerChange","calculateTotalPrice","reduce","sum","parseFloat","handleSubmit","preventDefault","handlePlaceOrder","itemImageUrls","FormData","forEach","fileObj","append","itemPayloads","picture","designImageUrls","formDataDesign","designsPayload","pictures","pictureFiles","_colorChart$find","find","size","text","font","_colorChart$find2","customerId","paymentId","method","toUpperCase","amount","layaway","quote","authData","JSON","parse","localStorage","getItem","orderPayload","design","duedate","payments","createdBy","username","success","alert","renderDesignSection","_colorChart$find3","style","backgroundColor","_colorChart$find4","onSubmit","readOnly","_item$images","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","onBlur","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/Huzaifa/OneDrive/Desktop/Project POS/client/src/components/newOrder.jsx"],"sourcesContent":["//// filepath: /C:/Users/Huzaifa/OneDrive/Desktop/Project POS/client/src/components/newOrder.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './newOrder.css';\r\nimport Header from './header';\r\nimport axios from 'axios';\r\nimport apis from '../utils/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst NewOrder = () => {\r\n  const [designItemName, setDesignItemName] = useState(\"\");\r\n  const [currentDateTime] = useState(new Date().toLocaleString());\r\n  const [selectedPayment, setSelectedPayment] = useState('');\r\n  const [took, settook] = useState('');\r\n  const [selectedDueTime, setSelectedDueTime] = useState('');\r\n  const [customDueTime, setCustomDueTime] = useState('');\r\n  const [designImages, setDesignImages] = useState([]);\r\n  const [itemImages, setItemImages] = useState([]);\r\n\r\n  // New Design Section State\r\n  const [designColors, setDesignColors] = useState([]);\r\n  const [designPlacements, setDesignPlacements] = useState([]);\r\n  const [designSize, setDesignSize] = useState('Fill');\r\n  \r\n  // New Text Section State\r\n  const [textFont, setTextFont] = useState('Arial');\r\n  const [textColors, setTextColors] = useState([]);\r\n  const [textPlacements, setTextPlacements] = useState([]);\r\n  const [textSize, setTextSize] = useState('FILL');\r\n\r\n  // Modals for design and text color selection\r\n  const [showDesignColorModal, setShowDesignColorModal] = useState(false);\r\n  const [showTextColorModal, setShowTextColorModal] = useState(false);\r\n  const [showCheckoutModal, setShowCheckoutModal] = useState(false);\r\n\r\n  // Handle item images\r\n  const handleItemImagesChange = (itemId, e) => {\r\n    const files = Array.from(e.target.files).map((file) => ({\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n    }));\r\n    setItems((prev) =>\r\n      prev.map((item) =>\r\n        item.id === itemId\r\n          ? { ...item, images: [...item.images, ...files] }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n  const removeItemImage = (itemId, index) => {\r\n    setItems((prev) =>\r\n      prev.map((item) =>\r\n        item.id === itemId\r\n          ? { ...item, images: item.images.filter((_, i) => i !== index) }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // Customer Info\r\n  const [customer, setCustomer] = useState({\r\n    name: '',\r\n    number: '',\r\n    email: '',\r\n    company: '',\r\n  });\r\n  const addDesign = () => {\r\n    const newId = (designs.length + 1).toString();\r\n    setDesigns((prev) => [\r\n      ...prev,\r\n      {\r\n        id: newId,\r\n        designItemName: '',\r\n        designImages: [],\r\n        designColors: [],\r\n        designPlacements: [],\r\n        designSize: 'Fill',\r\n        textFont: 'Arial',\r\n        textColors: [],\r\n        textPlacements: [],\r\n        textSize: 'FILL',\r\n      },\r\n    ]);\r\n  };\r\n  // Helper to combine placements\r\n  const combinePlacements = (placements) => {\r\n    const aPositions = placements.filter((p) => p.startsWith(\"A\")).sort();\r\n    const hPositions = placements.filter((p) => p.startsWith(\"H\")).sort();\r\n    const length = Math.max(aPositions.length, hPositions.length);\r\n    const combined = [];\r\n    for (let i = 0; i < length; i++) {\r\n      combined.push({\r\n        position1: aPositions[i] || '',\r\n        position2: hPositions[i] || ''\r\n      });\r\n    }\r\n    return combined;\r\n  };\r\n\r\n  // Items\r\n  const [items, setItems] = useState([\r\n    {\r\n      id: '1',\r\n      barcode: '',\r\n      itemNumber: '',\r\n      color: '',\r\n      price: '',\r\n      cost: '',\r\n      quantity: '',\r\n      images: [], // separate images for each item\r\n      selectedColors: [],\r\n      selectedPlacements: [],\r\n    },\r\n  ]);\r\n  const [designs, setDesigns] = useState([\r\n    {\r\n      id: '1',\r\n      designItemName: '',\r\n      designImages: [],\r\n      designColors: [],\r\n      designPlacements: [],\r\n      designSize: 'Fill',\r\n      textFont: 'Arial',\r\n      textColors: [],\r\n      textPlacements: [],\r\n      textSize: 'FILL',\r\n    },\r\n  ]);\r\n\r\n  // --- Backend helper functions (modified to handle arrays) ---\r\n  const createItems = async (itemsData) => {\r\n    // Adjust your backend to accept an array of items\r\n    const res = await axios.post(apis().newItem, { items: itemsData });\r\n    return res.data.itemIds; // Return array of item IDs\r\n  };\r\n\r\n  const createDesigns = async (designsData) => {\r\n    // Adjust your backend to accept an array of designs\r\n    const res = await axios.post(apis().newDesign, { designs: designsData });\r\n    return res.data.designIds; // Return array of design IDs\r\n  };\r\n\r\n  const createCustomer = async (customerData) => {\r\n    const res = await axios.post(apis().newCustomer, customerData);\r\n    return res.data.customer._id;\r\n  };\r\n\r\n  const createPayment = async (paymentData) => {\r\n    const res = await axios.post(apis().newOrderPayment, paymentData);\r\n    return res.data.payment._id;\r\n  };\r\n\r\n  const uploadImages = async (formData) => {\r\n    try {\r\n      const res = await axios.post(apis().images, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      return res.data.images || [];\r\n    } catch (error) {\r\n      console.error('Upload failed:', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const createFinalOrder = async (orderData) => {\r\n    const res = await axios.post(apis().newOrder, orderData);\r\n    return res.data.order._id;\r\n  };\r\n\r\n  // Color modal for items\r\n  const [showColorModal, setShowColorModal] = useState(false);\r\n  const [itemForColorModal, setItemForColorModal] = useState(null);\r\n  const openColorModal = (itemId) => {\r\n    setItemForColorModal(itemId);\r\n    setShowColorModal(true);\r\n  };\r\n  const closeColorModal = () => {\r\n    setShowColorModal(false);\r\n    setItemForColorModal(null);\r\n  };\r\n\r\n  const colorChart = [\r\n    { hex: '#000000', name: 'Black' },\r\n    { hex: '#0B0B0B', name: 'Very Dark Gray' },\r\n  ];\r\n\r\n  // Placement & color selection for items\r\n  const handlePlacementClick = (itemId, placement) => {\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        if (item.id === itemId) {\r\n          const newPlacements = item.selectedPlacements.includes(placement)\r\n            ? item.selectedPlacements.filter((p) => p !== placement)\r\n            : [...item.selectedPlacements, placement];\r\n          return { ...item, selectedPlacements: newPlacements };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  const handleColorSelect = (itemId, hex) => {\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) => {\r\n        if (item.id === itemId) {\r\n          const newColors = item.selectedColors.includes(hex)\r\n            ? item.selectedColors.filter((c) => c !== hex)\r\n            : [...item.selectedColors, hex];\r\n          return { ...item, selectedColors: newColors };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n\r\n  // Item fields\r\n  const handleItemChange = (itemId, field, value) => {\r\n    setItems((prevItems) =>\r\n      prevItems.map((item) =>\r\n        item.id === itemId ? { ...item, [field]: value } : item\r\n      )\r\n    );\r\n  };\r\n  const addItem = () => {\r\n    const newId = (parseInt(items[items.length - 1].id) + 1).toString();\r\n    setItems((prev) => [\r\n      ...prev,\r\n      {\r\n        id: newId,\r\n        barcode: '',\r\n        itemNumber: '',\r\n        color: '',\r\n        price: '',\r\n        cost: '',\r\n        quantity: '',\r\n        selectedColors: [],\r\n        selectedPlacements: [],\r\n      },\r\n    ]);\r\n  };\r\n  const removeItem = (itemId) => {\r\n    if (items.length > 1) {\r\n      setItems((prev) => prev.filter((item) => item.id !== itemId));\r\n    }\r\n  };\r\n\r\n  // Design images\r\n  const handleDesignImagesChange = (designId, e) => {\r\n    const files = Array.from(e.target.files).map((file) => ({\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n    }));\r\n    setDesigns((prev) =>\r\n      prev.map((ds) =>\r\n        ds.id === designId\r\n          ? { ...ds, designImages: [...ds.designImages, ...files] }\r\n          : ds\r\n      )\r\n    );\r\n  };\r\n  const removeDesignImage = (designId, index) => {\r\n    setDesigns((prev) =>\r\n      prev.map((ds) =>\r\n        ds.id === designId\r\n          ? {\r\n              ...ds,\r\n              designImages: ds.designImages.filter((_, i) => i !== index),\r\n            }\r\n          : ds\r\n      )\r\n    );\r\n  };\r\n  const removeDesign = (designId) => {\r\n    if (designs.length > 1) {\r\n      setDesigns((prev) => prev.filter((ds) => ds.id !== designId));\r\n    }\r\n  };\r\n  const renderAllDesigns = () =>\r\n    designs.map((ds, idx) => (\r\n      <div className=\"section\" key={ds.id}>\r\n        <h2 className=\"section-title\">\r\n          Design #{idx + 1}\r\n          {designs.length > 1 && (\r\n            <button\r\n              type=\"button\"\r\n              className=\"remove-button\"\r\n              onClick={() => removeDesign(ds.id)}\r\n            >\r\n              Remove Design\r\n            </button>\r\n          )}\r\n        </h2>\r\n        {/* Existing form fields, but updated to use ds.* instead of top-level state */}\r\n        <div className=\"upload-area\">\r\n          <p>Upload Design Image(s)</p>\r\n          <input type=\"file\"\r\n          accept=\"image/*\"\r\n          multiple\r\n          capture=\"environment\"\r\n          onChange={(e) => handleDesignImagesChange(ds.id, e)}\r\n        />\r\n      </div>\r\n      <div className=\"design-images-preview\">\r\n        {ds.designImages.map((img, i) => (\r\n          <div key={i} className=\"preview-item\">\r\n            <img src={img.preview} alt={`Design Preview ${i}`} />\r\n            <button type=\"button\" onClick={() => removeDesignImage(ds.id, i)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Design Item Name</label>\r\n        <input\r\ntype=\"text\"\r\nclassName=\"form-input\"\r\nplaceholder=\"Enter item name\"\r\nvalue={ds.designItemName}\r\nonChange={(e) =>\r\n  setDesigns((prev) =>\r\n    prev.map((d) =>\r\n      d.id === ds.id ? { ...d, designItemName: e.target.value } : d\r\n    )\r\n  )\r\n}\r\n/>\r\n<label className=\"form-label\">Design Color Selection</label>\r\n<button\r\ntype=\"button\"\r\nclassName=\"open-color-modal-button\"\r\nonClick={() => setShowDesignColorModal(true)} // open as needed\r\n>Select Colors\r\n        </button>\r\n        {/* Show ds.designColors */}\r\n      </div>\r\n      {/* Similar approach for designPlacements, designSize, textFont, textColors, textPlacements, textSize */}\r\n      {/* Each design's color modal or text color modal would also need logic to set ds.designColors / ds.textColors */}\r\n    </div>\r\n  ));\r\n  // Set due time\r\n  const handleDueTimeSelect = (time) => {\r\n    setSelectedDueTime(time);\r\n    const now = new Date();\r\n    let dueDate = new Date(now);\r\n    switch (time) {\r\n      case '15min':\r\n        dueDate.setMinutes(now.getMinutes() + 15);\r\n        break;\r\n      case '20min':\r\n        dueDate.setMinutes(now.getMinutes() + 20);\r\n        break;\r\n      case '30min':\r\n        dueDate.setMinutes(now.getMinutes() + 30);\r\n        break;\r\n      case '1hour':\r\n        dueDate.setHours(now.getHours() + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setCustomDueTime(dueDate.toISOString().slice(0, 16));\r\n  };\r\n  const handleCustomDueTimeChange = (e) => {\r\n    setCustomDueTime(e.target.value);\r\n    setSelectedDueTime('custom');\r\n  };\r\n\r\n  // Barcode scanning setup\r\n  useEffect(() => {\r\n    let buffer = '';\r\n    let lastKeyTime = Date.now();\r\n    const handleKeyPress = (e) => {\r\n      const currentTime = Date.now();\r\n      if (currentTime - lastKeyTime > 100) {\r\n        buffer = '';\r\n      }\r\n      if (e.key === 'Enter') {\r\n        if (buffer) {\r\n          handleItemChange(items[0].id, 'barcode', buffer);\r\n          buffer = '';\r\n        }\r\n      } else {\r\n        buffer += e.key;\r\n      }\r\n      lastKeyTime = currentTime;\r\n    };\r\n    window.addEventListener('keypress', handleKeyPress);\r\n    return () => window.removeEventListener('keypress', handleKeyPress);\r\n  }, [items]);\r\n\r\n  // Simulate fetching customer\r\n  const fetchCustomerByPhone = async (number) => {\r\n    const mockDB = {\r\n      '1234567890': {\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        company: 'Acme Inc.',\r\n      },\r\n      '9876543210': {\r\n        name: 'Jane Smith',\r\n        email: 'jane@example.com',\r\n        company: 'Globex Corp.',\r\n      },\r\n    };\r\n    return mockDB[number] || null;\r\n  };\r\n\r\n  // Prefill customer on phone blur\r\n  const handlePhoneBlur = async (e) => {\r\n    const number = e.target.value;\r\n    if (number) {\r\n      const result = await fetchCustomerByPhone(number);\r\n      if (result) {\r\n        setCustomer((prev) => ({ ...prev, number, ...result }));\r\n      }\r\n    }\r\n  };\r\n  const handleCustomerChange = (field, value) => {\r\n    setCustomer((prev) => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  // Calculations\r\n  const calculateTotalPrice = () => {\r\n    return items.reduce((sum, item) => {\r\n      const price = parseFloat(item.price) || 0;\r\n      const quantity = parseFloat(item.quantity) || 1;\r\n      return sum + price * quantity;\r\n    }, 0);\r\n  };\r\n\r\n  // Form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setShowCheckoutModal(true);\r\n  };\r\n\r\n  // --- Modified Order Submission with multiple items & multiple designs ---\r\n  const handlePlaceOrder = async () => {\r\n    try {\r\n      // 1 - Upload all item images if any\r\n      let itemImageUrls = [];\r\n      if (itemImages.length > 0) {\r\n        const formData = new FormData();\r\n        itemImages.forEach((fileObj) => formData.append('images', fileObj.file));\r\n        itemImageUrls = await uploadImages(formData);\r\n      }\r\n\r\n      // 2 - Prepare multiple item payloads\r\n      const itemPayloads = items.map((item) => ({\r\n        name: item.itemNumber,\r\n        color: item.color,\r\n        price: item.price,\r\n        cost: item.cost,\r\n        quantity: item.quantity,\r\n        picture: itemImageUrls[0] || ''\r\n      }));\r\n      const itemIds = await createItems(itemPayloads);\r\n\r\n      // 3 - Upload all design images if any\r\n      let designImageUrls = [];\r\n      if (designImages.length > 0) {\r\n        const formDataDesign = new FormData();\r\n        designImages.forEach((fileObj) => formDataDesign.append('images', fileObj.file));\r\n        designImageUrls = await uploadImages(formDataDesign);\r\n      }\r\n\r\n      // 4 - Prepare multiple design payloads (here just one, but can be extended)\r\n      const designsPayload = [\r\n        {\r\n          pictures: [\r\n            {\r\n              pictureFiles: designImageUrls,\r\n              colorChart: designColors.map((hex) => ({\r\n                item: designItemName,\r\n                color: colorChart.find((c) => c.hex === hex)?.name || hex\r\n              })),\r\n              placement: combinePlacements(designPlacements),\r\n              size: designSize\r\n            }\r\n          ],\r\n          text: [\r\n            {\r\n              font: textFont,\r\n              color: textColors.map((hex) => ({\r\n                item: 'Banner', // or update as needed\r\n                color: colorChart.find((c) => c.hex === hex)?.name || hex\r\n              })),\r\n              placement: combinePlacements(textPlacements),\r\n              size: textSize\r\n            }\r\n          ]\r\n        }\r\n      ];\r\n      const designIds = await createDesigns(designsPayload);\r\n\r\n      // 5 - Create or fetch customer\r\n      const customerId = await createCustomer({\r\n        name: customer.name,\r\n        number: customer.number,\r\n        email: customer.email,\r\n        company: customer.company,\r\n      });\r\n\r\n      // 6 - Create payment\r\n      const paymentId = await createPayment({\r\n        method: selectedPayment.toUpperCase(),\r\n        amount: calculateTotalPrice(),\r\n        layaway: took === 'layaway',\r\n        quote: took === 'quote',\r\n      });\r\n\r\n      // 7 - Create final order\r\n      const authData = JSON.parse(localStorage.getItem('authData')) || {};\r\n      const orderPayload = {\r\n        items: itemIds,\r\n        design: designIds, // now an array of design IDs\r\n        duedate: customDueTime,\r\n        customer: customerId,\r\n        payments: [paymentId],\r\n        createdBy: authData?.username || authData?._id || '000000000000000000000000'\r\n      };\r\n      await createFinalOrder(orderPayload);\r\n\r\n      setShowCheckoutModal(false);\r\n      toast.success('Order placed successfully');\r\n    } catch (error) {\r\n      console.error('Error placing order:', error);\r\n      alert('Error placing order');\r\n    }\r\n  };\r\n\r\n  // Render the new Design & Text Section\r\n  const renderDesignSection = () => (\r\n    <div className=\"section\">\r\n      <h2 className=\"section-title\">Design</h2>\r\n      <div className=\"upload-area\">\r\n        <p>Upload Design Image(s)</p>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          multiple\r\n          capture=\"environment\"\r\n          onChange={handleDesignImagesChange}\r\n        />\r\n      </div>\r\n      <div className=\"design-images-preview\">\r\n        {designImages.map((img, index) => (\r\n          <div key={index} className=\"preview-item\">\r\n            <img src={img.preview} alt={`Design Preview ${index}`} />\r\n            <button type=\"button\" onClick={() => removeDesignImage(index)}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Design Item Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter item name\"\r\n            value={designItemName}\r\n            onChange={(e) => setDesignItemName(e.target.value)}\r\n          />\r\n        </div>\r\n        <label className=\"form-label\">Design Color Selection</label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"open-color-modal-button\"\r\n          onClick={() => setShowDesignColorModal(true)}\r\n        >\r\n          Select Colors\r\n        </button>\r\n        <div className=\"selected-colors\">\r\n          {designColors.map((color) => (\r\n            <div key={color} className=\"selected-color-pill\">\r\n              <div\r\n                className=\"color-swatch\"\r\n                style={{ backgroundColor: color }}\r\n              />\r\n              {colorChart.find((c) => c.hex === color)?.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Design Placement</label>\r\n        <div className=\"placement-grid\">\r\n          {[...Array(9)].map((_, i) => (\r\n            <div\r\n              key={`A${i + 1}`}\r\n              className={`placement-cell ${\r\n                designPlacements.includes(`A${i + 1}`) ? 'selected' : ''\r\n              }`}\r\n              onClick={() =>\r\n                setDesignPlacements((prev) =>\r\n                  prev.includes(`A${i + 1}`)\r\n                    ? prev.filter((p) => p !== `A${i + 1}`)\r\n                    : [...prev, `A${i + 1}`]\r\n                )\r\n              }\r\n            >\r\n              A{i + 1}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"placement-grid\">\r\n          {[...Array(9)].map((_, i) => (\r\n            <div\r\n              key={`H${i + 1}`}\r\n              className={`placement-cell ${\r\n                designPlacements.includes(`H${i + 1}`) ? 'selected' : ''\r\n              }`}\r\n              onClick={() =>\r\n                setDesignPlacements((prev) =>\r\n                  prev.includes(`H${i + 1}`)\r\n                    ? prev.filter((p) => p !== `H${i + 1}`)\r\n                    : [...prev, `H${i + 1}`]\r\n                )\r\n              }\r\n            >\r\n              H{i + 1}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"form-label\">Design Size</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-input\"\r\n          value={designSize}\r\n          onChange={(e) => setDesignSize(e.target.value)}\r\n          placeholder=\"Enter size\"\r\n        />\r\n      </div>\r\n      <div className=\"text-section\">\r\n        <h3 className=\"section-title\">Text Properties</h3>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Font</label>\r\n          <select\r\n            className=\"form-select\"\r\n            value={textFont}\r\n            onChange={(e) => setTextFont(e.target.value)}\r\n          >\r\n            <option>Arial</option>\r\n            <option>Times New Roman</option>\r\n            <option>Helvetica</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Text Color</label>\r\n          <button\r\n            type=\"button\"\r\n            className=\"open-color-modal-button\"\r\n            onClick={() => setShowTextColorModal(true)}\r\n          >\r\n            Select Colors\r\n          </button>\r\n          <div className=\"selected-colors\">\r\n            {textColors.map((color) => (\r\n              <div key={color} className=\"selected-color-pill\">\r\n                <div\r\n                  className=\"color-swatch\"\r\n                  style={{ backgroundColor: color }}\r\n                />\r\n                {colorChart.find((c) => c.hex === color)?.name}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Text Placement</label>\r\n          <div className=\"placement-grid\">\r\n            {[...Array(9)].map((_, i) => (\r\n              <div\r\n                key={`A${i + 1}`}\r\n                className={`placement-cell ${\r\n                  textPlacements.includes(`A${i + 1}`) ? 'selected' : ''\r\n                }`}\r\n                onClick={() =>\r\n                  setTextPlacements((prev) =>\r\n                    prev.includes(`A${i + 1}`)\r\n                      ? prev.filter((p) => p !== `A${i + 1}`)\r\n                      : [...prev, `A${i + 1}`]\r\n                  )\r\n                }\r\n              >\r\n                A{i + 1}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"placement-grid\">\r\n            {[...Array(9)].map((_, i) => (\r\n              <div\r\n                key={`H${i + 1}`}\r\n                className={`placement-cell ${\r\n                  textPlacements.includes(`H${i + 1}`) ? 'selected' : ''\r\n                }`}\r\n                onClick={() =>\r\n                  setTextPlacements((prev) =>\r\n                    prev.includes(`H${i + 1}`)\r\n                      ? prev.filter((p) => p !== `H${i + 1}`)\r\n                      : [...prev, `H${i + 1}`]\r\n                  )\r\n                }\r\n              >\r\n                H{i + 1}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">Text Size</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={textSize}\r\n            onChange={(e) => setTextSize(e.target.value)}\r\n            placeholder=\"Enter size\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"new-order-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"global-controls\">\r\n            <button type=\"button\" className=\"add-item-button\" onClick={addItem}>\r\n              Add New Item\r\n            </button>\r\n          </div>\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Date/Time</h2>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                value={currentDateTime}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </div>\r\n          {items.map((item, index) => (\r\n            <div key={item.id}>\r\n              <div className=\"section\">\r\n                <div className=\"item-number\">Item #{index + 1}</div>\r\n                {items.length > 1 && (\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"remove-button\"\r\n                    onClick={() => removeItem(item.id)}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                )}\r\n                <h2 className=\"section-title\">Item</h2>\r\n                <div className=\"form-group\">\r\n                  <label className=\"form-label\">POS Scan</label>\r\n                  <div className=\"scanner-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input scanner-input\"\r\n                      value={item.barcode}\r\n                      onChange={(e) =>\r\n                        handleItemChange(item.id, 'barcode', e.target.value)\r\n                      }\r\n                      placeholder=\"Scan barcode or enter manually\"\r\n                    />\r\n                    <svg\r\n                      className=\"scanner-icon\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      fill=\"none\"\r\n                      stroke=\"currentColor\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeWidth={2}\r\n                        d=\"M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <h3 className=\"section-title\">New Item</h3>\r\n                  <div className=\"grid-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Item Number\"\r\n                      value={item.itemNumber}\r\n                      onChange={(e) =>\r\n                        handleItemChange(item.id, 'itemNumber', e.target.value)\r\n                      }\r\n                    />\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Color\"\r\n                      value={item.color}\r\n                      onChange={(e) =>\r\n                        handleItemChange(item.id, 'color', e.target.value)\r\n                      }\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Price\"\r\n                      value={item.price}\r\n                      onChange={(e) =>\r\n                        handleItemChange(item.id, 'price', e.target.value)\r\n                      }\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Cost\"\r\n                      value={item.cost}\r\n                      onChange={(e) =>\r\n                        handleItemChange(item.id, 'cost', e.target.value)\r\n                      }\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"form-input\"\r\n                      placeholder=\"Quantity\"\r\n                      value={item.quantity}\r\n                      onChange={(e) =>\r\n                        handleItemChange(item.id, 'quantity', e.target.value)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"upload-area\">\r\n                    <p>Upload Item Image(s)</p>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      multiple\r\n                      capture=\"environment\"\r\n                      onChange={(e) => handleItemImagesChange(item.id, e)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"design-images-preview\">\r\n                    {item.images?.map((img, idx) => (\r\n                      <div key={idx} className=\"preview-item\">\r\n                        <img src={img.preview} alt={`Item Image Preview ${idx}`} />\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeItemImage(item.id, idx)}\r\n                        >\r\n                          Remove\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n          {renderAllDesigns()}\r\n          <button type=\"button\" className=\"add-item-button\" onClick={addDesign}>\r\n            Add New Design\r\n          </button>\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Due</h2>\r\n            <div className=\"time-buttons\">\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${\r\n                  selectedDueTime === '15min' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => handleDueTimeSelect('15min')}\r\n              >\r\n                15 min\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${\r\n                  selectedDueTime === '20min' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => handleDueTimeSelect('20min')}\r\n              >\r\n                20 min\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${\r\n                  selectedDueTime === '30min' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => handleDueTimeSelect('30min')}\r\n              >\r\n                30 min\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className={`time-button ${\r\n                  selectedDueTime === 'custom' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => setSelectedDueTime('custom')}\r\n              >\r\n                Custom\r\n              </button>\r\n              <input\r\n                type=\"datetime-local\"\r\n                className=\"form-input\"\r\n                value={customDueTime}\r\n                onChange={handleCustomDueTimeChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Customer Information</h2>\r\n            <div className=\"grid-container\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                placeholder=\"Name\"\r\n                value={customer.name}\r\n                onChange={(e) => handleCustomerChange('name', e.target.value)}\r\n              />\r\n              <input\r\n                type=\"tel\"\r\n                className=\"form-input\"\r\n                placeholder=\"Phone Number\"\r\n                value={customer.number}\r\n                onChange={(e) => handleCustomerChange('number', e.target.value)}\r\n                onBlur={handlePhoneBlur}\r\n              />\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-input\"\r\n                placeholder=\"Email Address\"\r\n                value={customer.email}\r\n                onChange={(e) => handleCustomerChange('email', e.target.value)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-input\"\r\n                placeholder=\"Company\"\r\n                value={customer.company}\r\n                onChange={(e) => handleCustomerChange('company', e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"section\">\r\n            <h2 className=\"section-title\">Payment</h2>\r\n            <div className=\"payment-options\">\r\n              <div\r\n                className={`payment-option ${\r\n                  selectedPayment === 'cash' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => setSelectedPayment('cash')}\r\n              >\r\n                Cash\r\n              </div>\r\n              <div\r\n                className={`payment-option ${\r\n                  selectedPayment === 'card' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => setSelectedPayment('card')}\r\n              >\r\n                Card\r\n              </div>\r\n              <div\r\n                className={`payment-option ${\r\n                  selectedPayment === 'check' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => setSelectedPayment('check')}\r\n              >\r\n                Check\r\n              </div>\r\n              <div\r\n                className={`payment-option ${\r\n                  took === 'layaway' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => settook('layaway')}\r\n              >\r\n                Layaway (50%)\r\n              </div>\r\n              <div\r\n                className={`payment-option ${\r\n                  took === 'quote' ? 'selected' : ''\r\n                }`}\r\n                onClick={() => settook('quote')}\r\n              >\r\n                Quote\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Review Order\r\n          </button>\r\n        </form>\r\n      </div>\r\n  \r\n      {showColorModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal\">\r\n            <h2>Select Item Colors</h2>\r\n            <div className=\"color-grid\">\r\n              {colorChart.map(({ hex, name }) => (\r\n                <div\r\n                  key={hex}\r\n                  className=\"color-swatch\"\r\n                  style={{ backgroundColor: hex }}\r\n                  onClick={() => handleColorSelect(itemForColorModal, hex)}\r\n                >\r\n                  {name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button className=\"close-button\" onClick={closeColorModal}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n  \r\n      {showDesignColorModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal\">\r\n            <h2>Select Design Colors</h2>\r\n            <div className=\"color-grid\">\r\n              {colorChart.map(({ hex, name }) => (\r\n                <div\r\n                  key={hex}\r\n                  className=\"color-swatch\"\r\n                  style={{ backgroundColor: hex }}\r\n                  onClick={() =>\r\n                    setDesignColors((prev) =>\r\n                      prev.includes(hex)\r\n                        ? prev.filter((c) => c !== hex)\r\n                        : [...prev, hex]\r\n                    )\r\n                  }\r\n                >\r\n                  {name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button\r\n              className=\"close-button\"\r\n              onClick={() => setShowDesignColorModal(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n  \r\n      {showTextColorModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal\">\r\n            <h2>Select Text Colors</h2>\r\n            <div className=\"color-grid\">\r\n              {colorChart.map(({ hex, name }) => (\r\n                <div\r\n                  key={hex}\r\n                  className=\"color-swatch\"\r\n                  style={{ backgroundColor: hex }}\r\n                  onClick={() =>\r\n                    setTextColors((prev) =>\r\n                      prev.includes(hex)\r\n                        ? prev.filter((c) => c !== hex)\r\n                        : [...prev, hex]\r\n                    )\r\n                  }\r\n                >\r\n                  {name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <button\r\n              className=\"close-button\"\r\n              onClick={() => setShowTextColorModal(false)}\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n  \r\n      {showCheckoutModal && (\r\n        <div className=\"modal-backdrop\">\r\n          <div className=\"modal\">\r\n            <h2>Review Order</h2>\r\n            <p>Total Price: ${calculateTotalPrice().toFixed(2)}</p>\r\n            <div className=\"checkout-actions\">\r\n              <button onClick={handlePlaceOrder}>Place Order</button>\r\n              <button onClick={() => setShowCheckoutModal(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewOrder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}